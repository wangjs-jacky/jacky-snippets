{
  "[fs-extra][writeJson][async][callback 模式] ": {
    "prefix": "fse-writeJson",
    "body": [
      "/* ",
      "- file <String>",
      "- object <Object>",
      "- options <Object>",
      "  - spaces <Number> | <String> Number of spaces to indent; or a string to use for indentation (i.e. pass '\\t' for tab indentation). See the docs for more info.",
      "  - EOL <String> Set EOL character. Default is \\n.",
      "  - replacer JSON replacer",
      "  - Also accepts fs.writeFile() options",
      "- callback <Function>",
      "  - err <Error> ",
      "*/",
      "",
      "fse.writeJson('./package.json', {name: 'fs-extra'}, err => {",
      "  if (err) return console.error(err)",
      "  console.log('success!')",
      "})"
    ],
    "description": "[fs-extra][readJson][async][callback 模式] "
  },
  "[fs-extra][writeJson][async][promise 模式] ": {
    "prefix": "fse-writeJson",
    "body": [
      "/* ",
      "- file <String>",
      "- object <Object>",
      "- options <Object>",
      "  - spaces <Number> | <String> Number of spaces to indent; or a string to use for indentation (i.e. pass '\\t' for tab indentation). See the docs for more info.",
      "  - EOL <String> Set EOL character. Default is \\n.",
      "  - replacer JSON replacer",
      "  - Also accepts fs.writeFile() options",
      "- callback <Function>",
      "  - err <Error> ",
      "*/",
      "",
      "fse.writeJson('./package.json', {name: 'fs-extra'})",
      ".then(() => {",
      "  console.log('success!')",
      "})",
      ".catch(err => {",
      "  console.error(err)",
      "})"
    ],
    "description": "[fs-extra][writeJson][async][promise 模式] "
  },
  "[fs-extra][writeJson][async][async 模式] ": {
    "prefix": "fse-writeJson",
    "body": [
      "/* ",
      "- file <String>",
      "- object <Object>",
      "- options <Object>",
      "  - spaces <Number> | <String> Number of spaces to indent; or a string to use for indentation (i.e. pass '\\t' for tab indentation). See the docs for more info.",
      "  - EOL <String> Set EOL character. Default is \\n.",
      "  - replacer JSON replacer",
      "  - Also accepts fs.writeFile() options",
      "- callback <Function>",
      "  - err <Error> ",
      "*/",
      "",
      "try {",
      "  await fse.writeJson('./package.json', {name: 'fs-extra'})",
      "  console.log('success!')",
      "} catch (err) {",
      "  console.error(err)",
      "}"
    ],
    "description": "[fs-extra][writeJson][async][async 模式] "
  }
}